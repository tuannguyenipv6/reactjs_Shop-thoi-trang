import Head from 'next/head';
import { useContext, useEffect } from 'react';
import { Info } from '../../constants/dataDefault';
import { ToastifyContext } from '../../contexts/ToastifyContext';
import { IIntroduce } from '../../datatypes';
import { getInfoShop, getIntroduce } from '../../lib';
import styles from './Intro.module.css';

interface IIntroProps {
  introduce: IIntroduce;
  infoShop: Info;
  failure: boolean;
}

function Intro({introduce, infoShop, failure}: IIntroProps) {

  const {showToast} = useContext(ToastifyContext);
  useEffect(() => {
    if(failure) {
      showToast('Server đang lỗi!', 'error')
    }
  }, [])

  const {values:introduceShop} = introduce;

  return (<>
    <Head>
      <title>NQT Shop</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>

    <li className={styles.wrapperList}>
      <h1 className={styles.title}>Giới Thiệu Shop NQT</h1>

      {
        introduceShop.map(item => (<ul key={item._id} className={styles.item}>
          <h3 className={styles.itemTitle}>{item.key}</h3>
          <p className={styles.itemDescription}>
            {item.value}
          </p>
        </ul>))
      }

      <ul className={styles.item}>
        <h3 className={styles.itemTitle}>Cửa hàng NQT Shop</h3>
        <p className={`bold ${styles.itemDescription}`}>
          {`NQT Shop Store I: ${infoShop.StoreI} | ĐT: ${infoShop.Phone}`}
        </p>
        <p className={`bold ${styles.itemDescription}`}>
        {`NQT Shop Store I: ${infoShop.StoreII} | ĐT: ${infoShop.Phone}`}
        </p>
        <p className={styles.itemDescription}>
          Hoạt động từ 9h tới 21h hàng ngày và cả 7 ngày trong tuần. Rất vui được đón tiếp các bạn.
          Xin cảm ơn các bạn đã tin tưởng và ủng hộ NQT Shop.
        </p>
      </ul>
    </li>
  </>)
}

export const getStaticProps = async () => {
  const resIntroduce = await getIntroduce();
  const resInfoShop = await getInfoShop();

  // check failure
  if(!resIntroduce.success && resInfoShop.success) {
    const {infoShop} = resInfoShop;
    return {
      props: {
        failure: true,
        infoShop,
      }
    };
  }else if(resIntroduce.success && !resInfoShop.success) {
    const {introduceShop} = resIntroduce;
    return {
      props: {
        introduce: introduceShop,
        failure: true,
      }
    };
  }

  return {
    props: {
      introduce: resIntroduce.introduceShop,
      infoShop: resInfoShop.infoShop,
    }
  };
}

export default Intro;