import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useContext, useEffect, useState } from 'react';
import { FaAngleLeft, FaTrash } from 'react-icons/fa';
import { API, CALCULATE_PRICE, FOTMAT_CURRENCY } from '../../constants';
import { AuthContext } from '../../contexts/AuthContext';
import { PayContext } from '../../contexts/PayContext';
import { NavLink } from '../../custom-link';
import { IProduct, IProductCart } from '../../datatypes';
import { withAuth } from '../../HOC';
import { deleteCartProduct, getCart } from '../../lib/product';
import stylesAuth from '../../styles/Auth.module.css';
import styles from './Cart.module.css';

function Cart() {

  const {authState: {user}} = useContext(AuthContext)
  const [products, setProducts] = useState<IProductCart[]>([]);
  const {setPayProducts} = useContext(PayContext);
  const router = useRouter()

  useEffect(() => {
    const fetchData = async() => {
      const response = await getCart();
      if(response.success) {
        const newProduct = response.data.map((productData: IProduct) => ({
          ...productData,
          checked: true,
          amount: 1
        }))
        setProducts(newProduct)
      }
    }

    fetchData();
  }, [user])

  const handleDeleteCart = async (id: number) => {
    const response = await deleteCartProduct(id);

    if(response.success) {
      const newProduct = products.filter(product => (product._id != id))
      setProducts(newProduct);
    }
  }

  const handleSetChecked = (e: any) => {
    const value = e.target.value
    const newProduct = products.map(product => {
      if(`${product._id}` === `${value}`) {
        return {
          ...product,
          checked: !product.checked
        }
      }else {
        return product
      }
    })
    setProducts(newProduct)
  }

  const handleIncreaseAndDecrease = (id: number, increased: boolean) => {
    const newProduct = products.map(product => {
      if(product._id === id) {
        return {
          ...product,
          amount: increased ? product.amount + 1 : product.amount === 1 ? product.amount : product.amount -1
        }
      }else {
        return product
      }
    })
    setProducts(newProduct)
  }

  const allIntoMoney = (): string=> {
    const intoMoney = products.reduce((acc, product) => {
      if(product.checked) {
        const price = CALCULATE_PRICE(product) * product.amount;
        return acc + price
      }else {
        return acc
      }
    }, 0)

    return `${FOTMAT_CURRENCY(intoMoney)} đ`;
  }

  const handlePaying = () => {
    const productsPaying = products.filter(product => product.checked === true);
    setPayProducts(productsPaying);
    router.replace("/pay");
  }
  
  return (<>
    <Head>
      <title>NQT Shop</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>

    <div className={styles.wrapperLink}>
      <h5 style={{margin: 0}}>Giỏ Hàng</h5>

      <Link href='/oder'>
        <h5 className={styles.linkOder}>Xem đơn hàng hiện có</h5>
      </Link>
    </div>

    <div className="row">
      <div className="c-12 m-12 l-8">
        <ul className={styles.wrapperItem}>
          <li className={`${styles.item} ${styles.itemBorderBottom}`}>
            <p className={`${styles.itemSingle} f-4`}>Sản phẩm</p>
            <p className={`${styles.itemSingle} f-3`}>Đơn giá</p>
            <p className={`${styles.itemSingle} f-3`}>Số lượng</p>
            <p className={`${styles.itemSingle} f-4`}>Thành tiền</p>
          </li>

          {
            products.length > 0 ?
            products.map(product => (
              <li key={product._id} className={styles.item}>
                <div>
                  <input 
                    value={product._id}
                    className={styles.checked} 
                    type="checkbox" 
                    checked={product.checked}
                    onChange={handleSetChecked}
                  />
                </div>

                <span className={`${styles.itemSingle} f-4`}>
                  <img className={styles.img} src={`${API}/images/${product.nameImgs[0]}`} alt='Ảnh' />
                  <Link href={`/${product.name.replace(/\/?/g, '').replace(/\?/g, '').replace(/ /g, '-')}.${product._id}`}>
                    <span className={styles.name}>{product.name}</span>
                  </Link>
                </span>

                <div className={`${styles.wrapperDetail} f-10`}>
                  <Link href={`/${product.name.replace(/\/?/g, '').replace(/\?/g, '').replace(/ /g, '-')}.${product._id}`}>
                    <span className={styles.nameMobile}>{product.name}</span>
                  </Link>
                  
                  <span className={`${styles.itemSingle} f-3 ${styles.hidenMobile}`}>
                    {FOTMAT_CURRENCY(CALCULATE_PRICE(product))} ₫
                  </span>

                  <span className={`${styles.itemSingle} f-3`}>
                    <span 
                      className={styles.plusOrMinus} 
                      onClick={() => handleIncreaseAndDecrease(product._id, false)}
                    >-</span>
                    <span>{product.amount}</span>
                    <span 
                      className={styles.plusOrMinus}
                      onClick={() => handleIncreaseAndDecrease(product._id, true)}
                    >+</span>
                  </span>

                  <span className={`${styles.itemSingle} f-4`}>
                    <div className={styles.moneyDelete}>
                      <span>
                        {FOTMAT_CURRENCY(CALCULATE_PRICE(product) * product.amount)} ₫
                      </span>

                      <div onClick={() => handleDeleteCart(product._id)}>
                        <FaTrash className={styles.hidenMobile} color='#ce3f3f' cursor='pointer' />
                      </div>
                    </div>
                  </span>
                </div>

                <div onClick={() => handleDeleteCart(product._id)}>
                  <FaTrash size={25} className={styles.iconMobile} color='#ce3f3f' cursor='pointer' />
                </div>
              </li>
            ))
            : <h3 style={{display: 'flex', justifyContent: 'center', padding: '28px 0'}}>Giỏ hàng chưa có sản phẩm nào!</h3>
          }

          <li className={`${styles.item} ${styles.itemBorderTop}`}>
            <NavLink href='/category'>
              <div className={styles.back}>
                <FaAngleLeft fontSize={30} />
                <h3>Tiếp tục mua sắm</h3>
              </div>
            </NavLink>
          </li>
        </ul>
      </div>
      <div className="c-12 m-12 l-4">
        <div className={styles.wrapperBill}>
          <div className={styles.billTitle}>
            <p>Thành tiền:</p>
            <h3>{allIntoMoney()}</h3>
          </div>

          <button onClick={handlePaying} type='button' style={{alignSelf: 'center'}} className={stylesAuth.button}>
            THANH TOÁN
          </button>
        </div>
      </div>
    </div>
  </>)
}

export default withAuth(Cart);