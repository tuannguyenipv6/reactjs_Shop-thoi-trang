import Head from 'next/head';
import { useContext, useEffect } from 'react';
import { POLICYS } from '../../constants';
import { ToastifyContext } from '../../contexts/ToastifyContext';
import { IDataCommon } from '../../datatypes';
import { getDataByKey } from '../../lib';
import styles from '../intro/Intro.module.css';

interface IPolicyProps {
    data: IDataCommon;
    failure: boolean;
}

function Policy({data, failure}: IPolicyProps) {

    const {showToast} = useContext(ToastifyContext);
    useEffect(() => {
        if(failure) {
          showToast('Server đang lỗi!', 'error')
        }
      }, [failure])

    return (<>
        <Head>
          <title>NQT Shop</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
    
        <li className={styles.wrapperList}>
          <h1 className={styles.title}>{data?.suportKey}</h1>
    
          {
            data?.values.map(item => (
            <ul key={item._id} className={styles.item}>
              <h3 className={styles.itemTitle}>{item.key !== 'Not-Found' ? item.key : null}</h3>
              <p className={styles.itemDescription}>
                {item.value !== 'Not-Found' ? item.value : null}
              </p>
            </ul>))
          }
        </li>

        <h3>Cảm ơn bạn đã ghé thăm Shop NQT!</h3>
    </>)
}

export const getStaticPaths = async () => {
    const keys = POLICYS.map(policy => ({params: {key:policy}}))
    return {
      paths: keys,
      fallback: false, 
    }
};

export const getStaticProps = async ({ params }: any) => {
    const keys = params.key.split('.');
    const response = await getDataByKey(keys[keys.length - 1]);
    if(response.success) {
        return {
            props: {
                data: response.data,
            },
            revalidate: 1,
        };
    }else {
        return {
            props: {
                failure: true,
            },
            revalidate: 1,
        };
    }
  }

export default Policy;